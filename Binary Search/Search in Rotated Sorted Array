class Solution {
    public int search(int[] nums, int target) {
        int l=0,r=nums.length-1;
        while(l<r){
            int mid = (l+r)/2;
            if(nums[mid]>=nums[r]) l = mid+1;
            else r=mid;
        }
        int pivot = l;
        int res = binarySearch(nums,0,pivot-1,target);
        if(res!=-1) return res;
        return binarySearch(nums,pivot,nums.length-1,target); 
    }
    public int binarySearch(int nums[],int start,int end,int target){
        while(start<=end){
            int mid = start + (end-start)/2;
            if(nums[mid]>target) end = mid-1;
            else if(nums[mid]<target) start = mid+1;
            else return mid;
        }
        return -1;
    }

}
